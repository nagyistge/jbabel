// Generated by CoffeeScript 1.7.1
(function() {
  this.Image = (function() {
    function Image(data, header, dtype, _arg) {
      var _ref;
      this.data = data;
      this.header = header;
      this.dtype = dtype;
      _ref = _arg != null ? _arg : {}, this.filetype = _ref.filetype, this.name = _ref.name, this.description = _ref.description, this.metadata = _ref.metadata;
      if (this.filetype == null) {
        this.filetype = '';
      }
      this.dtype = 'volume';
      if (this.name == null) {
        this.name = '';
      }
      if (this.description == null) {
        this.description = '';
      }
      if (this.metadata == null) {
        this.metadata = {};
      }
    }

    Image.prototype.getData = function(remap) {
      if (remap == null) {
        remap = true;
      }
      if (remap) {
        return this.remapData();
      } else {
        return this.data;
      }
    };

    Image.prototype.remapData = function() {};

    Image.prototype.getHeader = function() {
      return this.header;
    };

    Image.load = function(url) {
      var createImage, vol;
      createImage = function(vol) {
        var data, dims, filetype, header, img, k, _i, _len, _ref;
        dims = vol.header.imageDimensions;
        data = ndarray(vol.imageData.data, [dims.xDim, dims.yDim, dims.zDim]);
        header = {};
        _ref = Object.keys(vol.header.fileFormat.nifti);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          k = _ref[_i];
          header[k] = vol.header.fileFormat.nifti[k];
        }
        img = new Image(data, header, 'volume', filetype = 'Nifti Volume');
        return alert(img.header.qoffset_z);
      };
      vol = new papaya.volume.Volume();
      return vol.readURL(url, createImage);
    };

    return Image;

  })();

}).call(this);
