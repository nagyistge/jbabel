// Generated by CoffeeScript 1.7.1
(function() {
  this.Image = (function() {
    function Image(data, header, dtype, _arg) {
      var _ref;
      this.data = data;
      this.header = header;
      this.dtype = dtype;
      _ref = _arg != null ? _arg : {}, this.filetype = _ref.filetype, this.name = _ref.name, this.description = _ref.description, this.metadata = _ref.metadata;
      if (this.filetype == null) {
        this.filetype = '';
      }
      this.dtype = 'volume';
      if (this.name == null) {
        this.name = '';
      }
      if (this.description == null) {
        this.description = '';
      }
      if (this.metadata == null) {
        this.metadata = {};
      }
    }

    Image.prototype.getData = function(remap) {
      if (remap == null) {
        remap = true;
      }
      if (remap) {
        return this.remapData();
      } else {
        return this.data;
      }
    };

    Image.prototype.remapData = function() {};

    Image.prototype.getHeader = function() {
      return this.header;
    };

    Image.fromPapayaVolume = function(volume) {
      var a, data, dtype, filetype, header, k, _i, _len, _ref;
      [
        (function() {
          var _i, _len, _results;
          if (a === 3) {
            _results = [];
            for (_i = 0, _len = b.length; _i < _len; _i++) {
              a = b[_i];
              _results.push(a);
            }
            return _results;
          }
        })()
      ];
      data = volume.data;
      dtype = 'volume';
      filetype = 'Nifti Volume';
      header = {};
      _ref = volume.nifti.NIFTI.keys();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        k = _ref[_i];
        header[k] = volume.nifti.NIFTI[k];
      }
      return new Image(data, header, dtype, filetype = filetype);
    };

    return Image;

  })();

}).call(this);
